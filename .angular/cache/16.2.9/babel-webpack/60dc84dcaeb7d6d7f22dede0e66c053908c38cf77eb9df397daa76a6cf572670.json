{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/service-worker\";\nexport class AppModule {\n  static #_ = this.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [BrowserModule, HttpClientModule, RouterModule.forRoot([{\n      path: 'home',\n      component: HomeComponent\n    }, {\n      path: '',\n      redirectTo: 'home',\n      pathMatch: 'full'\n    }, {\n      path: '**',\n      redirectTo: 'home',\n      pathMatch: 'full'\n    }]), ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })]\n  });\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, HomeComponent],\n    imports: [BrowserModule, HttpClientModule, i1.RouterModule, i2.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"names":["isDevMode","BrowserModule","HttpClientModule","RouterModule","AppComponent","HomeComponent","ServiceWorkerModule","AppModule","_","_2","bootstrap","_3","forRoot","path","component","redirectTo","pathMatch","register","enabled","registrationStrategy","declarations","imports","i1","i2"],"sources":["C:\\Users\\m\\source\\Ai-mashup\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'home', component: HomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n      { path: '**', redirectTo: 'home', pathMatch: 'full' }\n    ]),\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":"AAAA,SAAmBA,SAAS,QAAQ,eAAe;AACnD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,mBAAmB,QAAQ,yBAAyB;;;;AAyB7D,OAAM,MAAOC,SAAS;EAAA,QAAAC,CAAA,G;qBAATD,SAAS;EAAA;EAAA,QAAAE,EAAA,G;UAATF,SAAS;IAAAG,SAAA,GAFRN,YAAY;EAAA;EAAA,QAAAO,EAAA,G;cAftBV,aAAa,EACbC,gBAAgB,EAChBC,YAAY,CAACS,OAAO,CAAC,CACnB;MAAEC,IAAI,EAAE,MAAM;MAAEC,SAAS,EAAET;IAAa,CAAE,EAC1C;MAAEQ,IAAI,EAAE,EAAE;MAAEE,UAAU,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAM,CAAE,EACnD;MAAEH,IAAI,EAAE,IAAI;MAAEE,UAAU,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAM,CAAE,CACtD,CAAC,EACFV,mBAAmB,CAACW,QAAQ,CAAC,gBAAgB,EAAE;MAC7CC,OAAO,EAAE,CAAClB,SAAS,EAAE;MACrB;MACA;MACAmB,oBAAoB,EAAE;KACvB,CAAC;EAAA;;;2EAKOZ,SAAS;IAAAa,YAAA,GArBlBhB,YAAY,EACZC,aAAa;IAAAgB,OAAA,GAGbpB,aAAa,EACbC,gBAAgB,EAAAoB,EAAA,CAAAnB,YAAA,EAAAoB,EAAA,CAAAjB,mBAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}